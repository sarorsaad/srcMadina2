include ../elements/_ui-tabs-classic
include ../elements/_widget-form-search
include ../elements/_widget-list-social
include ../mixins/_rd-navbar-submenu-simple

//- RD Navbar Transparent
//- skin - rd navbar skin (transparent, inverse, default)
//- attrs - additional HTML attributes of rd navbar
//- logo - logo markup (<img/> or text)
//- links - nav links object
mixin rd-navbar-sidebar-toggle(skin, attrs, logo, activeLink, links, showYear)
  // RD Navbar Transparent
  .rd-navbar-wrap
    nav&attributes(attrs).rd-navbar(class="#{skin}")
      .rd-navbar-inner
        // RD Navbar Panel
        .rd-navbar-panel
          // RD Navbar Toggle
          button.rd-navbar-toggle(data-rd-navbar-toggle=".rd-navbar, .rd-navbar-nav-wrap")
            span
        .rd-navbar-menu-wrap
          .rd-navbar-nav-wrap
            -var tabs = [cfg.nav.components]
            -var megamenus = [cfg.nav.pages]
            -var type = 'simple'
            .rd-navbar-mobile-scroll-holder
              .rd-navbar-mobile-scroll
                //Navbar Brand Mobile
                .rd-navbar-mobile-brand
                  a(href="index.html") !{logo}

                .form-search-wrap
                  +widget-form-search('form-input-gray-lightest input-sm', "form-label-sm", "rd-navbar-form-search-widget")

                // RD Navbar Nav
                ul.rd-navbar-nav
                  each link, title in links
                    -type = 'simple'
                    li(class=(activeLink.title == link.title) ? 'active' : '')
                      a(href=link.href class=link.icon)
                        span= link.title
                        - if (typeof(link.badge) !== 'undefined')
                          span.rd-navbar-label.text-middle.badge-custom.badge-danger.badge-xs-custom.badge-rounded-custom.badge #{link.badge}
                      each tab in tabs
                        - if (JSON.stringify(tab) === JSON.stringify(link) ) type = 'tabs'

                      each megamenu in megamenus
                        -if (JSON.stringify(megamenu) === JSON.stringify(link) ) type = 'megamenu'

                      case type
                        when 'tabs'
                          .rd-navbar-megamenu
                            -var tabList = []
                            each title in link.submenu
                              -tabList.push(title.title)
                            if tabList.length > 0
                              +tabs-classic(tabList)
                                each tab in link.submenu
                                  .row
                                    ul
                                      each dropdown in tab.submenu
                                        li
                                          a(href=dropdown.href)
                                            span.rd-navbar-icon(class=dropdown.icon)
                                            span.text-middle= dropdown.title
                                            - if (typeof(dropdown.badge) !== 'undefined')
                                              span.rd-navbar-label.badge-custom.badge-danger.badge-xs-custom.badge-rounded-custom.badge #{dropdown.badge}
                        when 'megamenu'
                            ul.rd-navbar-dropdown
                              each dropdown in link.submenu
                                each link in dropdown.submenu
                                  li
                                    a(href=link.href)
                                      span.rd-navbar-icon(class=link.icon)
                                      span.text-middle= link.title


                        default
                          +rd-navbar-simple-submenu(link)